#Bitbucket SSH Pipelines, Just add Private & Public Key in Bitbucket

pipelines:
  branches:
    master:
      - step:
          name: Deploy and Run Commands
          script:
            - pipe: atlassian/ssh-run:0.8.1
              variables:
                SSH_USER: 'root'
                SERVER: '157.245.103.45'
                COMMAND: |
                    'whoami'
                    'pwd'
                    './test.sh'
                PORT: '22'
                SSH_KEY: $SSH_PRIVATE_KEY #if using another key then use $MY_SSH_KEY
                DEBUG: 'true'
      - step:
              script:
              - ALERT_TYPE="Success"
              - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="Failure" ; fi
              - pipe: atlassian/email-notify:0.13.1
                variables:
                    USERNAME: karan.ravat@rlogical.com
                    PASSWORD: $apppassword
                    FROM: karan.ravat@rlogical.com
                    TO: @rlogical.com, @rlogical.com
                    HOST: 'smtp.gmail.com'  
                    PORT: 587
                    SUBJECT: '${ALERT_TYPE}: Bitbucket Pipeline Notification for repo ${BITBUCKET_REPO_FULL_NAME} branch ${BITBUCKET_BRANCH}'

*********************************************************************************************************************************************************************************************************************************************************************************

pipelines:
  branches:
    master:
      - step:
          name: Deploy and Run Commands
          script:
            - pipe: atlassian/ssh-run:0.8.1
              variables:
                SSH_USER: 'ubuntu'
                SERVER: '35.154.219.76'
                COMMAND: 'sh /var/www/html/deployment.sh'
                PORT: '22'
                SSH_KEY: $SSH_PRIVATE_KEY
                DEBUG: 'true'

********************************************************************************************************************************************************************************************************************************************************************************

#!/bin/bash

# Navigate to the project directory
cd /var/www/html/api-supportcenter || { echo "Directory not found"; exit 1; }

# Fetch all branches and tags
git fetch -a

# Reset the local repository to match the remote master branch
git reset --hard origin/master

# Pull the latest changes from the remote master branch
git pull origin master

#Export NVM "This loads nvm"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# Use project Version
nvm use 20

# Install project dependencies
npm install

# Start the application using PM2
pm2 restart api_supportcenter || pm2 start npm --name "api_supportcenter" -- run dev
