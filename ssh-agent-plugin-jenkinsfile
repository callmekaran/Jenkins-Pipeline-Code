pipeline {
    agent any

    stages {
        stage('Install Dependencies') {
            steps {
                sshagent(['Test-Server']) {
                    script {
                        def hostIp = ""
                        def installCommand = """
                            ssh -o StrictHostKeyChecking=no -l ubuntu ${hostIp} << EOF
                            cd /home/ubuntu/project
                            echo \$USER   # Display the remote user
                            ifconfig
                            npm install
EOF
                        """
                        sh(script: installCommand)
                    }
                }
            }
        }

        stage('Build Project') {
            steps {
                sshagent(['Test-Server']) {
                    script {
                        def hostIp = ""
                        def buildCommand = """
                            ssh -o StrictHostKeyChecking=no -l ubuntu ${hostIp} << EOF
                            cd /home/ubuntu/project
                            echo "Running npm run build"
                            npm run build
EOF
                        """
                        sh(script: buildCommand)
                    }
                }
            }
        }
    }
}

==========================================================================================================================================================================================================================





pipeline {
    agent any

    triggers {
        // Trigger the build whenever there's a push to Bitbucket
        bitbucketPush buildOnCreatedBranch: false, overrideUrl: ''
    }

    stages {
        stage('Execute Remote Commands') {
            steps {
                // Execute the shell commands on the remote server using SSH agent
                sshagent(credentials: ['node-server']) {
                    script {
                        def hostIp = "3.154.219.76" // Replace with the actual IP address of the server
                        def installCommand = """
                            echo \$USER   # Display the remote user
                            ifconfig
                        """
                        sh(script: "ssh -o StrictHostKeyChecking=no -l ubuntu ${hostIp} '${installCommand}'")
                    }
                }
            }
        }


    }
    post {
        success {
            echo 'Build completed successfully!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}

